.container .row::before, .container .row::after {
  display: block;
  height: 0;
  visibility: hidden;
  clear: both;
  content: "";
}

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

.container .row [class*=col-] {
  float: left;
  min-height: 1px;
  width: 100%;
}

@media (min-width: 500px) {
  .container .row .col-1 {
    width: 50%;
  }
  .container .row .col-2 {
    width: 100%;
  }
}

.container .row::before, .container .row::after {
  display: block;
  height: 0;
  visibility: hidden;
  clear: both;
  content: "";
}

.container .row::before, .container .row::after {
  display: block;
  height: 0;
  visibility: hidden;
  clear: both;
  content: "";
}

header {
  min-height: 2rem;
  line-height: 2rem;
  position: fixed;
  width: 100vw;
}

header li {
  display: inline-block;
  float: left;
}

header li a {
  color: white;
  padding-right: 0.5rem;
  font-size: 18px;
}

header .logo {
  color: whitelo;
  float: right;
}

.container .row::before, .container .row::after {
  display: block;
  height: 0;
  visibility: hidden;
  clear: both;
  content: "";
}

.home {
  background: url("../images/home.png") left no-repeat;
  height: 100vh;
  width: 100%;
  background-repeat: no-repeat;
  background-color: #ffffff;
  background-attachment: fixed;
  background-position: top center;
  background-size: cover;
  top: 0;
  left: 0;
}

.home div.container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 100vh;
  width: 100vw;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.home div.container h1 {
  text-align: center;
  font-size: 5vh;
  font-weight: bold;
  color: white;
  display: block;
}

.home div.container h1 span {
  font-weight: bold;
  font-size: 5vh;
  color: #fbeb68;
}

.home div.container h1 strong {
  color: white;
  font-size: 2.5vh;
}

.container .row::before, .container .row::after {
  display: block;
  height: 0;
  visibility: hidden;
  clear: both;
  content: "";
}

.adventures .row .col-1:first-of-type {
  padding-top: 13%;
  padding-left: 10%;
}

.adventures .row .col-1:first-of-type h3 {
  font-size: 1rem;
}

.adventures .row .col-1:first-of-type h1 {
  font-size: 1.5rem;
}

.adventures .row .col-1:first-of-type p {
  font-size: 1rem;
  text-align: left;
}

@media (min-width: 650px) and (max-width: 800px) {
  .adventures .row .col-1:first-of-type p {
    font-size: 0.76923rem;
  }
}

@media (min-width: 501px) and (max-width: 649px) {
  .adventures .row .col-1:first-of-type p {
    font-size: 0.55556rem;
  }
}

@media (max-width: 900px) {
  .adventures .row .col-1:first-of-type {
    padding-top: 5%;
    padding-left: 5%;
  }
}

.adventures .row .col-1:last-of-type img:first-of-type {
  position: absolute;
}

@media (max-width: 620px) {
  .adventures .row .col-1:last-of-type img:first-of-type {
    display: none;
  }
}

.container .row::before, .container .row::after {
  display: block;
  height: 0;
  visibility: hidden;
  clear: both;
  content: "";
}

.gallery {
  padding: 10% 0;
}

.gallery span {
  color: #fbeb68;
  font-weight: bold;
}

#slider {
  position: relative;
  width: 100%;
  height: 50%;
  overflow: hidden;
}

#slider ul {
  position: relative;
  list-style: none;
  height: 100%;
  width: 9999%;
  padding: 0;
  margin: 0;
  -webkit-transition: all 750ms ease;
  transition: all 750ms ease;
  left: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

#slider ul li {
  padding-left: 10vw;
  position: relative;
  height: 100%;
  width: calc(80vw);
  float: left;
}

#slider #prev, #slider #next {
  width: 50px;
  line-height: 50px;
  border-radius: 50%;
  font-size: 2rem;
  text-shadow: 0 0 20px rgba(0, 0, 0, 0.6);
  text-align: center;
  color: white;
  text-decoration: none;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  -webkit-transition: all 150ms ease;
  transition: all 150ms ease;
}

#slider #prev:hover, #slider #next:hover {
  background-color: rgba(0, 0, 0, 0.5);
  text-shadow: 0;
}

#slider #prev {
  left: 10px;
}

#slider #next {
  right: 10px;
}

.container .row::before, .container .row::after {
  display: block;
  height: 0;
  visibility: hidden;
  clear: both;
  content: "";
}

.map {
  overflow: hidden;
  min-width: 50vw;
  min-height: 80vh;
}

.map .container {
  overflow: hidden;
  position: relative;
}

.map .container .paragraph {
  max-width: 50vw;
  padding-left: 10%;
  position: absolute;
  top: 30vh;
}

.map .container .paragraph h1 {
  font-size: 1.5rem;
}

@media (max-width: 850px) {
  .map .container .paragraph h1 {
    font-size: 1.07143rem;
  }
}

.map .container .paragraph p {
  font-size: 1rem;
  text-align: left;
}

@media (min-width: 750px) and (max-width: 850px) {
  .map .container .paragraph p {
    font-size: 0.71429rem;
  }
}

@media (max-width: 749px) {
  .map .container .paragraph p {
    font-size: 0.83333rem;
  }
}

@media (min-width: 600px) and (max-width: 850px) {
  .map .container .paragraph {
    padding-left: 5%;
    top: 10vh;
  }
}

@media (min-width: 500px) and (max-width: 600px) {
  .map .container .paragraph {
    padding-left: 5%;
    top: 0;
    max-width: 60vw;
  }
}

@media (max-width: 499px) {
  .map .container .paragraph {
    padding-left: 5%;
    top: 0;
    max-width: 70vw;
  }
}

.map .container img {
  position: relative;
  right: -30vw;
  top: 0;
}

.container .row::before, .container .row::after {
  display: block;
  height: 0;
  visibility: hidden;
  clear: both;
  content: "";
}

* {
  margin: 0;
  padding: 0;
  font-family: 'Montserrat', sans-serif;
  font-size: 16px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body {
  background-color: white;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
